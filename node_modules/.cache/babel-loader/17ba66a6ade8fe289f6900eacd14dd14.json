{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Herberton\\\\Documents\\\\alfood\\\\src\\\\paginas\\\\Administracao\\\\Restaurantes\\\\FormularioRestaurante.tsx\",\n    _s = $RefreshSig$();\n\nimport { AppBar, Box, Button, TextField, Typography, Container, Link, Paper } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport http from \"../../../http\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FormularioRestaurante = () => {\n  _s();\n\n  const parametros = useParams();\n  useEffect(() => {\n    if (parametros.id) {\n      http.get(`restaurantes/${parametros.id}/`).then(resposta => setNomeRestaurante(resposta.data.nome));\n    }\n  }, [parametros]);\n  const [nomeRestaurante, setNomeRestaurante] = useState('');\n\n  const aoSubmeterForm = evento => {\n    evento.preventDefault(); // nÃ£o tenha comportamento de recarregar a pagina\n\n    if (parametros.id) {\n      http.put(`restaurantes/${parametros.id}/`, {\n        nome: nomeRestaurante\n      }).then(() => {\n        alert(\"Restaurante atualizado com sucesso!\");\n      });\n    } else {\n      http.post('restaurantes/', {\n        nome: nomeRestaurante\n      }).then(() => {\n        alert(\"Restaurante cadastrado com sucesso!\");\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Administra\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexGrow: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            component: RouterLink,\n            to: \"/admin/restaurantes\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                my: 2,\n                color: 'white'\n              },\n              children: \"Restaurantes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                my: 2,\n                color: 'white'\n              },\n              children: \"Novo Restaurantes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        sx: {\n          mt: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              flexGrow: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h1\",\n              variant: \"h6\",\n              children: \" Formulario de restaurantes \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              component: \"form\",\n              sx: {\n                width: '100%'\n              },\n              onSubmit: aoSubmeterForm,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                value: nomeRestaurante,\n                onChange: evento => setNomeRestaurante(evento.target.value),\n                id: \"standard-basic\",\n                label: \"Nome do Restaurante\",\n                variant: \"standard\",\n                fullWidth: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                sx: {\n                  marginTop: 1\n                },\n                type: \"submit\",\n                fullWidth: true,\n                variant: \"outlined\",\n                children: \"Salvar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FormularioRestaurante, \"XqHD56BXNSUaiw/O7Qr89DMmzfQ=\", false, function () {\n  return [useParams];\n});\n\n_c = FormularioRestaurante;\nexport default FormularioRestaurante;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormularioRestaurante\");","map":{"version":3,"sources":["C:/Users/Herberton/Documents/alfood/src/paginas/Administracao/Restaurantes/FormularioRestaurante.tsx"],"names":["AppBar","Box","Button","TextField","Typography","Container","Link","Paper","useEffect","useState","useParams","http","RouterLink","FormularioRestaurante","parametros","id","get","then","resposta","setNomeRestaurante","data","nome","nomeRestaurante","aoSubmeterForm","evento","preventDefault","put","alert","post","display","flexGrow","my","color","mt","p","flexDirection","alignItems","width","target","value","marginTop"],"mappings":"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","sourcesContent":["import { AppBar, Box, Button, TextField, Typography, Container, Toolbar, Link, Paper } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport http from \"../../../http\";\nimport IRestaurante from \"../../../interfaces/IRestaurante\";\n\nimport {Link as RouterLink} from 'react-router-dom'\n\nconst FormularioRestaurante = () => {\n  const parametros = useParams()\n\n  useEffect(() => {\n    if (parametros.id) {\n      http.get<IRestaurante>(`restaurantes/${parametros.id}/`)\n        .then(resposta => setNomeRestaurante(resposta.data.nome))\n    }\n  }, [parametros])\n\n  const [nomeRestaurante, setNomeRestaurante] = useState('')\n\n  const aoSubmeterForm = (evento: React.FormEvent<HTMLFormElement>) => {\n    evento.preventDefault() // nÃ£o tenha comportamento de recarregar a pagina\n\n    if (parametros.id) {\n      http.put(`restaurantes/${parametros.id}/`, {\n        nome: nomeRestaurante\n      })\n        .then(() => {\n          alert(\"Restaurante atualizado com sucesso!\")\n        })\n    } else {\n      http.post('restaurantes/', {\n        nome: nomeRestaurante\n      })\n        .then(() => {\n          alert(\"Restaurante cadastrado com sucesso!\")\n        })\n    }\n\n  }\n\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Container maxWidth=\"xl\">\n          <Typography variant=\"h6\">\n            AdministraÃ§Ã£o\n          </Typography>\n          <Box sx={{ display: 'flex', flexGrow: 1 }}>\n            <Link component={RouterLink} to=\"/admin/restaurantes\">\n              <Button sx={{ my: 2, color: 'white' }}>\n                Restaurantes\n              </Button>\n            </Link>\n            <Link >\n              <Button sx={{ my: 2, color: 'white' }}>\n                Novo Restaurantes\n              </Button>\n            </Link>\n          </Box>\n        </Container>\n      </AppBar>\n\n      <Box>\n        <Container maxWidth=\"lg\" sx={{ mt: 1 }}>\n          <Paper sx={{ p: 2 }}>\n\n            {/* Conteudo da pagina */}\n            <Box sx={{ display: 'flex', flexDirection: \"column\", alignItems: \"center\", flexGrow: 1}}>\n              <Typography component=\"h1\" variant=\"h6\"> Formulario de restaurantes </Typography>\n              <Box component=\"form\" sx={{ width: '100%'}} onSubmit={aoSubmeterForm}>\n                <TextField\n                  value={nomeRestaurante}\n                  onChange={evento => setNomeRestaurante(evento.target.value)}\n                  id=\"standard-basic\"\n                  label=\"Nome do Restaurante\"\n                  variant=\"standard\"\n                  fullWidth\n                  required\n                />\n                <Button sx={{ marginTop: 1 }} type=\"submit\" fullWidth variant=\"outlined\">Salvar</Button>\n              </Box>\n            </Box>\n          </Paper>\n\n        </Container>\n      </Box>\n\n\n    </>\n  )\n}\n\nexport default FormularioRestaurante"]},"metadata":{},"sourceType":"module"}